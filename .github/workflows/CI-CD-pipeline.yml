name: Penga CI/CD

env:
  AZURE_WEBAPP_NAME: penga-api
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  
on:
  workflow_dispatch:
    branches: [ "*" ]
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
      
  build-api:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore API Nuget packages
      run: dotnet restore Penga.sln

    - name: Build API solution
      run: dotnet build Penga.sln --configuration Release --no-restore
      
    - name: Publish
      run: dotnet publish -c Release -o ${{ env.DOTNET_ROOT }}/app  --no-restore --no-build
      
    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: penga-api
        path: ${{ env.DOTNET_ROOT }}/app
      
  build-ui:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node 20
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install npm dependencies
      run: npm install
      working-directory: src/penga-ui
      
    - name: Create .env file
      run: |
        echo "NEXT_PUBLIC_ENTRA_ID_CLIENT_ID=${{ secrets.ENTRA_ID_CLIENT_ID }}" >> .env
        echo "NEXT_PUBLIC_ENTRA_ID_TENANT_ID=${{ secrets.ENTRA_ID_TENANT_ID }}" >> .env
        echo "NEXT_PUBLIC_PENGA_API_BASE_URL=${{ secrets.PENGA_API_BASE_URL }}" >> .env
      working-directory: src/penga-ui
    
    - name: Build NextJS app
      run: npm run build
      working-directory: src/penga-ui
      
    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v4
      with:
        name: penga-ui
        path: src/penga-ui/out
      
  deploy-api:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-api

    steps:
    - name: Download artifact from build
      uses: actions/download-artifact@v4
      with:
        name: penga-api

    - name: Inject variables
      uses: microsoft/variable-substitution@v1
      with:
        files: appsettings.json
      env:
        ConnectionStrings.PengaDb: ${{ secrets.PENGA_DB_CONNECTION_STRING }},
        EntraID.ClientId: ${{ secrets.ENTRA_ID_CLIENT_ID }},
        EntraID.TenantId: ${{ secrets.ENTRA_ID_TENANT_ID }},
        
    - name: Deploy to Azure App Service
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        
  deploy-ui:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-ui
    
    steps:
    - name: Download artifact from build
      uses: actions/download-artifact@v4
      with:
        name: penga-ui
        
    - name: Deploy
      id: deploy
      uses: azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APP_DEPLOY_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        skip_app_build: true
        app_location: "." # App source code path
        api_location: "" # Api source code path - optional
        output_location: "." # Built app content directory - optional